name: Publish Docker image and deploy

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [trigger-workflow]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      deploy: ${{ steps.filter.outputs.deploy }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        predicate-quantifier: 'every'
        filters: |
          deploy:
            - '**/*'
            - '!README.md'
            - '!docs/**'
            - '!LICENSE'
            - '.gitignore'
            - '!.vscode/**'
  publish:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.deploy == 'true' || github.event_name != 'push' }}
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/idn-au/idnau:latest
  deploy:
    needs: publish
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Stop current website if exists
      run: |
        if [ -d "/home/ubuntu/website/" ]; then
          cd /home/ubuntu/website/
          docker compose -f website-compose.yaml stop website
        fi
    - name: Copy files
      run: |
        mkdir -p /home/ubuntu/website/
        cp -Rf website-compose.yaml /home/ubuntu/website/
    - name: Deploy website
      working-directory: /home/ubuntu/website/
      run: docker compose -f website-compose.yaml up -d
